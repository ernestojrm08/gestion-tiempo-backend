<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gesti√≥n de Usuarios</title>
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <div>
        <%- include("./layout/header_admin",{usuario:usuario}); %>
        <nav class="menu">
            <ul class="menu_ul">
                <% if (usuario.rol === 'admin') { %>
                    <li><a href="/api/usuarios/vista" id="crud_user">Usuarios</a></li>
                <% } %>
                <% if (usuario.rol === 'admin' || usuario.rol === 'usuario') { %>
                    <li><a href="/api/tareas/vista" id="crud_tareas">Tareas</a></li>
                    <li><a href="/api/objetivos/vista" id="crud_objetivos">Objetivos</a></li>
                    <li><a href="/api/recordatorios/vista" id="crud_recordatorio">Recordatorio</a></li>
                    <li><a href="/api/habitos/vista" id="crud_habitos">H√°bitos</a></li>
                <% } %>
                <li><a href="/api/actividades/vista" id="crud_actividades">Actividades</a></li>
            </ul>
        </nav>
    </div>
    <main>
        <section class="dashboard">
            <div class="contariner__dashboard">
                <div id="contenido-principal">
                    <main>
                        <h1>Gesti√≥n de Usuarios</h1>
                        <form id="form-usuario">
                            <input type="hidden" id="usuario-id">
                            <input type="text" id="nombre" placeholder="Nombre" required>
                            <input type="email" id="correo" placeholder="Correo" required>
                            <input type="password" id="contrase√±a" placeholder="Contrase√±a">
                            <input type="text" id="id_usuario" placeholder="ID (buscar)">
  
                            <button type="submit" id="button_form">Agregar Usuario</button>
                            <br/>
                            <button type="button" id="buscar_usuario">Buscar Usuario</button>
                            <button type="button" id="cancelar-edicion" style="display:none;">Limpiar Formulario</button>
                        </form>
                        <div class="contenerdor_tabla">
                            <table>
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Nombre</th>
                                        <th>Correo</th>
                                        <th>Rol</th>
                                        <th class="action_buttom_table">Acciones</th>
                                    </tr>
                                </thead>
                                <tbody id="usuarios-body"></tbody>
                            </table>
                        </div>

                        <script>
                            function consultaCambioRol(usuarioId, nuevoRol) {
                                fetch('/api/usuarios/asignar-rol', {
                                  method: 'POST',
                                  headers: {
                                    'Content-Type': 'application/json',
                                  },
                                  body: JSON.stringify({
                                    usuarioId: usuarioId,
                                    rol: nuevoRol
                                  }),
                                })
                                .then(response => response.json())
                                .then(data => {
                                  console.log('Respuesta del servidor:', data);
                                  // Aqu√≠ puedes manejar la respuesta de tu consulta
                                  alert(data.mensaje)
                                })
                                .catch(error => {
                                  console.error('Error al realizar la consulta:', error);
                                });
                            }

                            function dibujarSelect(usuario) {
                              return `
                                <select name="rol" class="id_rol ${usuario._id}">
                                  <option value="admin" ${usuario.rol === "admin" ? 'selected' : ''}>Admin</option>
                                  <option value="usuario" ${usuario.rol === "usuario" ? 'selected' : ''}>Usuario</option>
                                  <option value="invitado" ${usuario.rol === "invitado" ? 'selected' : ''}>invitado</option>
                                </select>
                              `;
                            }
                            document.addEventListener('DOMContentLoaded', () => {
                                const formUsuario = document.getElementById('form-usuario');
                                const usuariosBody = document.getElementById('usuarios-body');
                                const usuarioIdInput = document.getElementById('usuario-id');
                                const nombreInput = document.getElementById('nombre');
                                const correoInput = document.getElementById('correo');
                                const contrase√±aInput = document.getElementById('contrase√±a');
                                const submitButton = document.getElementById('button_form');
                                const cancelarEdicionButton = document.getElementById('cancelar-edicion');
                                const buscarButton = document.getElementById('buscar_usuario');
                                let editingUserId = null;

                                // Funci√≥n para renderizar la tabla de usuarios
                                const renderizarUsuarios = (usuarios) => {
                                    console.log("llegada de uusario", usuarios);
                                    usuariosBody.innerHTML = '';
                                    usuarios.reverse();
                                    usuarios.forEach(usuario => {
                                        const row = usuariosBody.insertRow();
                                        row.innerHTML = `
                                            <td>${usuario._id}</td>
                                            <td>${usuario.nombre}</td>
                                            <td>${usuario.correo}</td>
                                            <td>${dibujarSelect(usuario)}</td>
                                            <td>
                                                <button class="btn-editar" data-id="${usuario._id}" title="editar">‚úèÔ∏è</button>
                                                <button class="btn-eliminar" data-id="${usuario._id}" title="eliminar">üóëÔ∏è</button>
                                            </td>
                                        `;
                                    });

                                    // Agregar event listeners a los botones despu√©s de renderizar
                                    document.querySelectorAll('.btn-eliminar').forEach(button => {
                                        button.addEventListener('click', (event) => {
                                            const id = event.target.dataset.id;
                                            eliminarUsuario(id);
                                        });
                                    });

                                    document.querySelectorAll('.btn-editar').forEach(button => {
                                        button.addEventListener('click', (event) => {
                                            const id = event.target.dataset.id;
                                            cargarUsuarioParaEdicion(id);
                                        });
                                    });

                                    const selects = document.querySelectorAll('.id_rol');
                                    console.log(selects);
                                    selects.forEach(select => {
                                      select.addEventListener('change', function() {

                                        const nuevoRol = this.value;
                                        const usuarioId = this.classList.item(1); // Suponiendo que el ID est√° en la segunda clase
                                    
                                        console.log(`El rol del usuario ${usuarioId} ha cambiado a: ${nuevoRol}`);
                                        if(confirm("Esta seguro de cambiar el rol del usuario?")){
                                            consultaCambioRol(usuarioId, nuevoRol);
                                        }else{
                                            obtenerUsuarios();
                                        }
                                    
                                      });
                                    });
                                };

                                // Funci√≥n para obtener la lista de usuarios
                                const obtenerUsuarios = async () => {
                                    try {
                                        const response = await fetch('/api/usuarios');
                                        if (!response.ok) {
                                            throw new Error(`HTTP error! status: ${response.status}`);
                                        }
                                        const usuarios = await response.json();
                                        renderizarUsuarios(usuarios);
                                    } catch (error) {
                                        console.error('Error al obtener usuarios:', error);
                                    }
                                };
                                // Funci√≥n para obtener la lista de usuarios
                                const obtenerUsuario = async (id) => {
                                    try {
                                        const response = await fetch('/api/usuarios/'+id);
                                        if (!response.ok) {
                                            throw new Error(`HTTP error! status: ${response.status}`);
                                        }
                                        const usuario = await response.json();
                                        renderizarUsuarios([usuario]);
                                    } catch (error) {
                                        console.error('Error al obtener usuarios:', error);
                                    }
                                };

                                // Funci√≥n para crear un nuevo usuario o actualizar uno existente
                                formUsuario.addEventListener('submit', async (event) => {
                                    event.preventDefault();
                                    const nombre = nombreInput.value;
                                    const correo = correoInput.value;
                                    const contrase√±a = contrase√±aInput.value;
                                    const id = usuarioIdInput.value;

                                    const userData = { nombre, correo };
                                    if (contrase√±a) {
                                        userData.contrase√±a = contrase√±a;
                                    }

                                    const method = id ? 'PUT' : 'POST';
                                    const url = id ? `/api/usuarios/${id}` : '/api/usuarios';

                                    try {
                                        const response = await fetch(url, {
                                            method: method,
                                            headers: {
                                                'Content-Type': 'application/json',
                                            },
                                            body: JSON.stringify(userData),
                                        });

                                        if (!response.ok) {
                                            const errorData = await response.json();
                                            console.error(`Error al ${method === 'PUT' ? 'actualizar' : 'crear'} usuario:`, errorData);
                                            alert(`Error al ${method === 'PUT' ? 'actualizar' : 'crear'} usuario: ${errorData.mensaje || JSON.stringify(errorData.errores || {})}`);
                                            return;
                                        }

                                        const resultado = await response.json();
                                        console.log(`Usuario ${method === 'PUT' ? 'actualizado' : 'creado'}:`, resultado);
                                        formUsuario.reset();
                                        editingUserId = null;
                                        submitButton.textContent = 'Agregar Usuario';
                                        cancelarEdicionButton.style.display = 'none';
                                        usuarioIdInput.value = "";
                                        contrase√±aInput.removeAttribute('required');
                                        obtenerUsuarios(); // Recargar la lista de usuarios
                                        alert(`Usuario ${method === 'PUT' ? 'actualizado' : 'creado'} correctamente`);

                                    } catch (error) {
                                        console.error(`Error al enviar la petici√≥n de ${method === 'PUT' ? 'actualizaci√≥n' : 'creaci√≥n'}:`, error);
                                        alert(`Error al ${method === 'PUT' ? 'actualizar' : 'crear'} usuario`);
                                    }
                                });

                                // Funci√≥n para eliminar un usuario
                                const eliminarUsuario = async (id) => {
                                    if (confirm(`¬øEst√°s seguro de que deseas eliminar el usuario con ID: ${id}?`)) {
                                        try {
                                            const response = await fetch(`/api/usuarios/${id}`, {
                                                method: 'DELETE',
                                            });

                                            if (!response.ok) {
                                                const errorData = await response.json();
                                                console.error('Error al eliminar usuario:', errorData);
                                                alert(`Error al eliminar usuario: ${errorData.mensaje || 'Error desconocido'}`);
                                                return;
                                            }

                                            const resultado = await response.json();
                                            console.log('Usuario eliminado:', resultado);
                                            obtenerUsuarios(); // Recargar la lista de usuarios
                                            alert('Usuario eliminado correctamente');

                                        } catch (error) {
                                            console.error('Error al enviar la petici√≥n de eliminaci√≥n:', error);
                                            alert('Error al eliminar usuario');
                                        }
                                    }
                                };

                                // Funci√≥n para cargar los datos del usuario en el formulario para editar
                                const cargarUsuarioParaEdicion = async (id) => {
                                    try {
                                        const response = await fetch(`/api/usuarios/${id}`);
                                        if (!response.ok) {
                                            const errorData = await response.json();
                                            console.error('Error al obtener usuario para editar:', errorData);
                                            alert(`Error al obtener usuario para editar: ${errorData.mensaje || 'Error desconocido'}`);
                                            return;
                                        }
                                        const usuario = await response.json();
                                        editingUserId = usuario._id;
                                        usuarioIdInput.value = usuario._id;
                                        nombreInput.value = usuario.nombre;
                                        correoInput.value = usuario.correo;
                                        contrase√±aInput.value = ''; // Limpiar el campo de contrase√±a por seguridad
                                        contrase√±aInput.removeAttribute('required');
                                        submitButton.textContent = 'Guardar Cambios';
                                        cancelarEdicionButton.style.display = 'inline-block';
                                    } catch (error) {
                                        console.error('Error al cargar usuario para edici√≥n:', error);
                                        alert('Error al cargar usuario para edici√≥n');
                                    }
                                };

                                // Funci√≥n para cancelar la edici√≥n
                                cancelarEdicionButton.addEventListener('click', (event) => {
                                    event.preventDefault();
                                    formUsuario.reset();
                                    usuarioIdInput.value = "";
                                    editingUserId = null;
                                    submitButton.textContent = 'Agregar Usuario';
                                    cancelarEdicionButton.style.display = 'none';
                                    contrase√±aInput.setAttribute('required', 'required');
                                    obtenerUsuarios();
                                });
                                
                                buscarButton.addEventListener('click',(event) =>{
                                    event.preventDefault();
                                    const id = document.getElementById("id_usuario").value;
                                    if(id){
                                        cancelarEdicionButton.style.display = 'block';
                                        formUsuario.reset();
                                        usuarioIdInput.value = "";
                                        obtenerUsuario(id);
                                    }
                                })
                                // Cargar la lista de usuarios al cargar la p√°gina
                                obtenerUsuarios();
                            });
                        </script>
                    </main>
                </div>
            </div>
        </section>
    </main>
    <%- include("./layout/footer"); %>
    <script type="module" src="/js/dashboard/linkNavActive.js"></script>
</body>
</html>